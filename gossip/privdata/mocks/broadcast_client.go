// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	common "github.com/hyperledger/fabric-protos-go/common"
	mock "github.com/stretchr/testify/mock"
)

// BroadcastClient is an autogenerated mock type for the BroadcastClient type
type BroadcastClient struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *BroadcastClient) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Send provides a mock function with given fields: env
func (_m *BroadcastClient) Send(env *common.Envelope) error {
	ret := _m.Called(env)

	var r0 error
	if rf, ok := ret.Get(0).(func(*common.Envelope) error); ok {
		r0 = rf(env)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewBroadcastClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewBroadcastClient creates a new instance of BroadcastClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBroadcastClient(t mockConstructorTestingTNewBroadcastClient) *BroadcastClient {
	mock := &BroadcastClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
